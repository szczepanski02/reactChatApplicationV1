{"version":3,"sources":["AuthContext.js","components/LoginForm/LoginForm.js","components/LoginForm/LoginFormPage.js","components/ChatPanel/Message.js","config.js","components/ChatPanel/MessageForm.js","components/ChatPanel/Channel.js","components/ChatPanel/ChatPanel.js","App.js","index.js"],"names":["authContext","createContext","authenticated","setAuthenticated","nickname","setNickname","Provider","Consumer","LoginForm","useContext","AuthContext","onSubmit","e","preventDefault","target","elements","value","spacing","isRequired","type","name","placeholder","colorScheme","LoginFormPage","minHeight","align","justify","bg","max","width","maxW","py","px","fontSize","textAlign","rounded","boxShadow","p","base","md","convertDate","timestamp","datetime","Date","getHours","getMinutes","getSeconds","Message","message","color","user","content","firebase","initializeApp","apiKay","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","db","database","MessageForm","useState","newMessage","setNewMessage","messageObj","now","ref","push","then","window","scrollTo","document","body","scrollHeight","catch","err","console","error","onChange","Channel","messages","setMessage","useEffect","on","snapshot","fbMessages","val","convertedMessages","Object","entries","map","id","ChatPanel","mx","onClick","App","theme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd2fcfe6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst authContext = createContext({\n    authenticated: false,\n    setAuthenticated: () => {},\n    nickname: \"\",\n    setNickname: () => {}\n});\n\nconst { Provider, Consumer } = authContext;\nexport { Provider, Consumer };\nexport default authContext;","import React, { useContext } from 'react';\nimport { Button, Stack, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport AuthContext from '../../AuthContext';\n\nconst LoginForm = () => {\n    const { setAuthenticated, setNickname } = useContext(AuthContext);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const { nickname } = e.target.elements;\n        setAuthenticated(true);\n        setNickname(nickname.value);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Stack spacing={3}>\n                <FormControl isRequired>\n                    <FormLabel>Nickname</FormLabel>\n                    <Input type=\"text\" name=\"nickname\" placeholder=\"nickname\"></Input>\n                </FormControl>\n                <Button type=\"submit\" colorScheme=\"blue\">Login</Button>\n            </Stack>\n        </form>\n    );\n}\nexport default LoginForm;\n","import React from 'react';\nimport { Flex, Stack, Box, Heading } from '@chakra-ui/react';\nimport LoginForm from './LoginForm';\n\nconst LoginFormPage = () => {\n    return (\n        <Flex minHeight=\"100vh\" align=\"center\" justify=\"center\" bg=\"gray.200\">\n            <Stack spacing={8} max=\"auto\" width=\"full\" maxW=\"md\" py={12} px={6}>\n                <Heading fontSize=\"3xl\" textAlign=\"center\">Sing up</Heading>\n                <Box rounded=\"lg\" bg=\"white\" boxShadow=\"lg\" p={{ base: 4, md: 8 }}>\n                    <LoginForm />\n                </Box>\n            </Stack>\n        </Flex>\n    );\n}\nexport default LoginFormPage;","import React from 'react';\nimport { Box, Text, Divider } from '@chakra-ui/react';\n\nconst convertDate = (timestamp) => {\n    const datetime = new Date(timestamp);\n    return `${datetime.getHours()}:${datetime.getMinutes()}:${datetime.getSeconds()}`;\n}\n\nconst Message = ({ message }) => {\n\n    return (\n        <Box rounded=\"lg\" bg=\"white\" boxShadow=\"lg\" p={6}>\n            <Text py={2} color=\"grey\">{message.user} {convertDate(message.datetime)}</Text>\n            <Divider />\n            <Text py={2}>{message.content}</Text>\n        </Box>\n    );\n}\nexport default Message;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKay: 'AIzaSyD0Det7fNEuLCbtBEyLrH0ZEncC9n1K_Kw',\n    authDomain: 'chatproject-ad639.firebaseapp.com',\n    projectId: 'chatproject-ad639',\n    storageBucket: 'chatproject-ad639.appspot.com',\n    messagingSenderId: '159209061165',\n    appId: '1:159209061165:web:6fad83010a893085d9b1a4',\n    databaseURL: 'https://chatproject-ad639-default-rtdb.europe-west1.firebasedatabase.app'\n}\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database();\nexport default db;","import React, { useState ,useContext } from 'react';\nimport { HStack, Input, Button } from '@chakra-ui/react';\nimport AuthContext from '../../AuthContext';\nimport db from '../../config';\n\nconst MessageForm = () => {\n\n    const { nickname } = useContext(AuthContext);\n    const [newMessage, setNewMessage] = useState('');\n\n    const handleContentChange = e => setNewMessage(e.target.value);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const messageObj = {\n            user: nickname,\n            content: newMessage,\n            datetime: Date.now()\n        };\n        if(newMessage) {\n            db.ref('/messages').push(messageObj)\n            .then(() => {\n                setNewMessage('');\n                window.scrollTo(0, document.body.scrollHeight);\n            })\n            .catch(err => console.error(err));\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <HStack>\n                <Input type=\"text\" name=\"content\" value={newMessage} onChange={handleContentChange}  />\n                <Button type=\"submit\" colorScheme=\"blue\">Send</Button>\n            </HStack>\n        </form>\n    );\n}\nexport default MessageForm;","import React, { useState, useEffect } from 'react';\nimport { Stack } from '@chakra-ui/react';\n\nimport Message from './Message';\nimport MessageForm from './MessageForm';\nimport db from '../../config';\n\nconst Channel = () => {\n    const [messages, setMessage] = useState([]);\n\n    useEffect(() => {\n        // on nasÅ‚uchuje na bazÄ™ danych, once pobiera dane tylko raz\n        db.ref('/messages').on('value', (snapshot) => {\n            const fbMessages = snapshot.val();\n            const convertedMessages = Object.entries(fbMessages || {}).map(([id, message]) => ({\n                ...message,\n                id\n            }));\n            setMessage(convertedMessages);\n        });\n    }, []);\n\n    return (\n        <Stack spacing={8} py={6}>\n            {messages.map((message) => (\n                <Message key={message.id} message={message}/>\n            ))};\n            <MessageForm />\n        </Stack>\n    );\n}\nexport default Channel;","import React, { useContext } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { Flex, Stack, Box, Text, Link, Divider } from '@chakra-ui/react';\nimport Channel from './Channel';\n\nconst ChatPanel = () => {\n\n    const { setAuthenticated, nickname } = useContext(AuthContext);\n    const handleLogout = () => setAuthenticated(false);\n\n    return (\n        <Flex minHeight=\"100vh\" align=\"flex-start\" justify=\"center\" bg=\"gray.200\">\n            <Stack spacing={8} width=\"full\" mx=\"auto\" py={6} px={6}>\n                <Box rounded=\"lg\" bg=\"white\" boxShadow=\"lg\" p={4}>\n                    <Text textAlign=\"right\">Hello <strong>{nickname}</strong>!\n                        {\" | \"}\n                        <Link onClick={handleLogout}>Log out</Link>\n                    </Text>\n                    <Divider />\n                    <Channel />\n                </Box>\n            </Stack>\n        </Flex>\n    );\n}\nexport default ChatPanel;","import React, { useState } from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport { LoginFormPage } from './components/LoginForm';\nimport { ChatPanel } from './components/ChatPanel';\nimport { Provider as AuthProvider } from './AuthContext';\n\nconst App = () => {\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [nickname, setNickname] = useState('');\n\n  return (\n    <ChakraProvider theme={theme}>\n      <AuthProvider value={{ authenticated, setAuthenticated, nickname, setNickname }}>\n        {authenticated ? <ChatPanel /> : <LoginFormPage />}\n      </AuthProvider>\n    </ChakraProvider>\n  );\n}\nexport default App;\n","import { StrictMode } from 'react';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}